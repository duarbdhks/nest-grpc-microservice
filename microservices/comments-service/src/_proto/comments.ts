/**
* This file is auto-generated by nestjs-proto-gen-ts
*/
import { Metadata } from '@grpc/grpc-js';

                export namespace comments {
                                export interface Comment {
                                    id?: string;
                                    organization?: string;
                                    comment?: string;
                                    created_at?: string;
                                    updated_at?: string;
                                }
                                export interface CreateCommentRequest {
                                    organization?: string;
                                    comment?: string;
                                }
                                export interface CommentList {
                                    data?: comments.Comment[];
                                }
                                export interface CommentsService {
                                        findAll(data: common.Query, metadata?: Metadata): Promise<CommentList>;
                                        // rpc count(common.Query) returns (common.Count){}
                                        create(data: CreateCommentRequest, metadata?: Metadata): Promise<Comment>;
                                }
                }
                        export namespace common {
                                export interface Id {
                                    id?: string;
                                }
                                export interface Name {
                                    name?: string;
                                }
                                export interface Query {
                                    attributes?: string[];
                                    where?: string;
                                    order?: string;
                                    offset?: number;
                                    limit?: number;
                                }
                                export interface Count {
                                    count?: number;
                                }
                }
                        export namespace comments2 {
                                export interface Comment2 {
                                    id?: string;
                                    organization?: string;
                                    comment?: string;
                                    created_at?: string;
                                    updated_at?: string;
                                }
                                export interface CreateCommentRequest2 {
                                    organization?: string;
                                    comment?: string;
                                }
                                export interface CommentList2 {
                                    data?: comments2.Comment2[];
                                }
                                export interface CommentsService2 {
                                        findAll(data: common.Query, metadata?: Metadata): Promise<CommentList2>;
                                        // rpc count(common.Query) returns (common.Count){}
                                        create(data: CreateCommentRequest2, metadata?: Metadata): Promise<Comment2>;
                                }
                }
        
